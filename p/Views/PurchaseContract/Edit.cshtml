@using p.Models;
@*@using p.ViewModels;*@
@model Contract

@{
    ViewBag.Title = "master contract edit";
}

<h2>Master Contract Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Contract</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorID, "Vendor")
        </div>
        <div class="editor-field">
            @Html.DropDownList("VendorID", String.Empty)
            @Html.ValidationMessageFor(model => model.VendorID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Recurrence)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Recurrence)
            @Html.ValidationMessageFor(model => model.Recurrence)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

    </fieldset>
   
    <fieldset>
        <legend>ContractItems</legend>

        <style type="text/css">
            input {
                border: 1px solid #e2e2e2;
                background: #fff;
                color: #333;
                font-size: 1.2em;
                margin: 5px 0 6px 0;
                padding: 5px;
                width: 150px;
            }
        </style>
        <table>
            <thead>
                <tr>
                    <th></th>
                    <th style="width: 100px">Product</th>
                    <th style="width: 100px">Rate</th>
                    <th style="width: 100px">Quantity</th>
                    <th style="width: 100px">Amount</th>
                    <th style="width: 100px"></th>
                </tr>
            </thead>

            <tbody id="itemEditor">
                @if (Model == null || Model.ContractItems == null || Model.ContractItems.Count == 0)
                {
                    <tr>
                        <td>None.</td>
                    </tr>
                }
                @if (Model != null && Model.ContractItems != null)
                {
                    foreach (ContractItem contractItem in Model.ContractItems)
                    {
                        Html.RenderPartial("ContractItemRow", contractItem);
                        // Html.RenderPartial("ContractItemRow", new ContractItemViewModel { ci = contractItem, Products = ViewData["ProductID"] as SelectList });
                    }
                }
            </tbody>
        </table>

        <a id="addAnother" href="#">Add another</a>

        <script type="text/javascript">
            $(function () {
                $("#itemEditor").sortable();
                $("#addAnother").click(function () {
                    $.get('/PurchaseContract/ContractItemRow', function (template) {
                        $("#itemEditor").append(template);
                    });
                });
            });
        </script>

    </fieldset>
    <p>
        <input type="submit" value="Save" />
        @Html.ActionLink("Print", "Print", new { id = Model.ID, version = Model.Version })
        @Html.ActionLink("Back to List", "Index")
    </p>
}

@section Scripts {
    <script>
        $("#VendorID").combobox();
    </script>
}
